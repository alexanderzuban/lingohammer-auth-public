AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  LingoHammer Backend User Pool Setup

Parameters:
  ParentStackName:
    Description: Stack Name
    Type: String
    Default: none
  UserPoolArn:
    Description: Target User Pool ARN
    Type: String
    Default: none

Globals:
  Function:
    Timeout: 20
    MemorySize: 2048
    Runtime: java17
    CodeUri: ../.
    AutoPublishAlias: live
    DeploymentPreference:
      Type: AllAtOnce
    SnapStart:
      ApplyOn: PublishedVersions
    Architectures:
      - x86_64
    Environment:
      Variables:
        JAVA_TOOL_OPTIONS: -XX:+TieredCompilation -XX:TieredStopAtLevel=1
        STACK_NAME: !Sub '${ParentStackName}'


Resources:

  LingoHammerAuthLoginFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.lingohammer.aws.auth.process.login.LoginLambdaHandler::handleRequest
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub 'api/${ParentStackName}/*'
        - KMSDecryptPolicy:
            KeyId: 'alias/aws/ssm'
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub ${UserPoolArn}
      Events:
        LingoHammer:
          Type: Api
          Properties:
            Path: /auth/user/login
            Method: POST

  LingoHammerAuthLoginFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LingoHammerAuthLoginFunction}'
      RetentionInDays: 30

  LingoHammerAuthRegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.lingohammer.aws.auth.process.register.RegistrationLambdaHandler::handleRequest
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub 'api/${ParentStackName}/*'
        - KMSDecryptPolicy:
            KeyId: 'alias/aws/ssm'
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
                - cognito-idp:AdminDeleteUser
                - cognito-idp:AdminDisableUser
              Resource: !Sub ${UserPoolArn}
      Events:
        LingoHammer:
          Type: Api
          Properties:
            Path: /auth/user/register
            Method: POST

  LingoHammerAuthRegisterFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LingoHammerAuthRegisterFunction}'
      RetentionInDays: 30

  LingoHammerAuthConfirmFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.lingohammer.aws.auth.process.register.RegistrationConfirmLambdaHandler::handleRequest
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub 'api/${ParentStackName}/*'
        - KMSDecryptPolicy:
            KeyId: 'alias/aws/ssm'
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub ${UserPoolArn}
      Events:
        LingoHammer:
          Type: Api
          Properties:
            Path: /auth/user/confirm
            Method: POST

  LingoHammerAuthConfirmFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LingoHammerAuthConfirmFunction}'
      RetentionInDays: 30


  LingoHammerAuthUserFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.lingohammer.aws.auth.process.info.UserInfoLambdaHandler::handleRequest
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub 'api/${ParentStackName}/*'
        - KMSDecryptPolicy:
            KeyId: 'alias/aws/ssm'
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub ${UserPoolArn}
      Events:
        LingoHammer:
          Type: Api
          Properties:
            Path: /auth/user
            Method: POST

  LingoHammerAuthUserFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LingoHammerAuthUserFunction}'
      RetentionInDays: 30

  LingoHammerAuthResetPasswordFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.lingohammer.aws.auth.process.restore.RestorePasswordLambdaHandler::handleRequest
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub 'api/${ParentStackName}/*'
        - KMSDecryptPolicy:
            KeyId: 'alias/aws/ssm'
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub ${UserPoolArn}
      Events:
        LingoHammer:
          Type: Api
          Properties:
            Path: /auth/user/password/reset
            Method: POST

  LingoHammerAuthResetPasswordFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LingoHammerAuthResetPasswordFunction}'
      RetentionInDays: 30


  LingoHammerAuthResetPasswordConfirmFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: com.lingohammer.aws.auth.process.restore.RestorePasswordConfirmLambdaHandler::handleRequest
      Policies:
        - SSMParameterReadPolicy:
            ParameterName: !Sub 'api/${ParentStackName}/*'
        - KMSDecryptPolicy:
            KeyId: 'alias/aws/ssm'
        - Statement:
            - Effect: Allow
              Action:
                - cognito-idp:AdminGetUser
              Resource: !Sub ${UserPoolArn}
      Events:
        LingoHammer:
          Type: Api
          Properties:
            Path: /auth/user/password/confirm
            Method: POST

  LingoHammerAuthResetPasswordConfirmFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${LingoHammerAuthResetPasswordConfirmFunction}'
      RetentionInDays: 30